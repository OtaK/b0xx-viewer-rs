name: Handle Release

on:
  release:
    types: [created]

jobs:
  generate:
    name: Create release-artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y libudev-dev libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Install minimal stable Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Run build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
      - name: Create artifact archive (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          zip -r b0xx_viewer_linux_release_${{ github.event.release.tag_name }}.zip assets target/release/b0xx_viewer
      - name: Create artifact archive (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          zip -r b0xx_viewer_macos_release_${{ github.event.release.tag_name }}.zip assets target/release/b0xx_viewer
      - name: Create artifact archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          zip -r b0xx_viewer_windows_release_${{ github.event.release.tag_name }}.zip assets target/release/b0xx_viewer.exe
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@release-1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'b0xx_viewer_*_release_${{ github.event.release.tag_name }}.zip'
